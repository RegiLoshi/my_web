{"ast":null,"code":"var _jsxFileName = \"/Users/regiloshi/portfolio/src/components/projects_page/projects_page.js\";\nimport React from \"react\";\nimport music_logo from \"./music1.jpeg\";\nimport './projects_page.css';\nimport { Tilt } from 'react-tilt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  const defaultOptions = {\n    reverse: false,\n    // reverse the tilt direction\n    max: 35,\n    // max tilt rotation (degrees)\n    perspective: 1000,\n    // Transform perspective, the lower the more extreme the tilt gets.\n    scale: 1,\n    // 2 = 200%, 1.5 = 150%, etc..\n    speed: 1000,\n    // Speed of the enter/exit transition\n    transition: true,\n    // Set a transition on enter/exit.\n    axis: null,\n    // What axis should be disabled. Can be X or Y.\n    reset: true,\n    // If the tilt effect has to be reset on exit.\n    easing: \"cubic-bezier(.03,.98,.52,.99)\" // Easing on enter/exit.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"tc white\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n\n  /* <div className=\"project\">\n              <div className=\"text-project\">\n                  <h2 className=\"white\">Debut Python Project: Video Downloads & Music Playback</h2>\n                  <p className=\"white\">My debut Python project introduces me to programming.<br />It employs a library for hassle-free video downloads from links.<br /> The user-centric GUI empowers users to pick folders for downloads or music playback.<br /> MP3s can be directly saved or played in the chosen folder. <br /> Future enhancements paused to prioritize other projects.</p>\n                  <br />\n                  <p><a href=\"https://github.com/RegiLoshi/Python-Music-Player-and-Downloader\" target=\"_blank\" rel=\"noopener noreferrer\">Press to go to the Github page...</a></p>\n              </div>\n              <Tilt>\n              <img src={music_logo} alt=\"Music App\" target='_blank' />\n              </Tilt>\n          </div>\n          */\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","music_logo","Tilt","jsxDEV","_jsxDEV","Projects","defaultOptions","reverse","max","perspective","scale","speed","transition","axis","reset","easing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/regiloshi/portfolio/src/components/projects_page/projects_page.js"],"sourcesContent":["import React from \"react\";\nimport music_logo from \"./music1.jpeg\";\nimport './projects_page.css';\nimport { Tilt } from 'react-tilt'\n\nconst Projects = () => {\n\n    const defaultOptions = {\n        reverse:        false,  // reverse the tilt direction\n        max:            35,     // max tilt rotation (degrees)\n        perspective:    1000,   // Transform perspective, the lower the more extreme the tilt gets.\n        scale:          1,    // 2 = 200%, 1.5 = 150%, etc..\n        speed:          1000,   // Speed of the enter/exit transition\n        transition:     true,   // Set a transition on enter/exit.\n        axis:           null,   // What axis should be disabled. Can be X or Y.\n        reset:          true,    // If the tilt effect has to be reset on exit.\n        easing:         \"cubic-bezier(.03,.98,.52,.99)\",    // Easing on enter/exit.\n        }\n\n    return (\n        <div className=\"projects-container\">\n            <h1 className=\"tc white\">Projects</h1>\n        </div>\n    )\n\n    /* <div className=\"project\">\n                <div className=\"text-project\">\n                    <h2 className=\"white\">Debut Python Project: Video Downloads & Music Playback</h2>\n                    <p className=\"white\">My debut Python project introduces me to programming.<br />It employs a library for hassle-free video downloads from links.<br /> The user-centric GUI empowers users to pick folders for downloads or music playback.<br /> MP3s can be directly saved or played in the chosen folder. <br /> Future enhancements paused to prioritize other projects.</p>\n                    <br />\n                    <p><a href=\"https://github.com/RegiLoshi/Python-Music-Player-and-Downloader\" target=\"_blank\" rel=\"noopener noreferrer\">Press to go to the Github page...</a></p>\n                </div>\n                <Tilt>\n                <img src={music_logo} alt=\"Music App\" target='_blank' />\n                </Tilt>\n            </div>\n            */\n}\n\nexport default Projects;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAO,qBAAqB;AAC5B,SAASC,IAAI,QAAQ,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAEnB,MAAMC,cAAc,GAAG;IACnBC,OAAO,EAAS,KAAK;IAAG;IACxBC,GAAG,EAAa,EAAE;IAAM;IACxBC,WAAW,EAAK,IAAI;IAAI;IACxBC,KAAK,EAAW,CAAC;IAAK;IACtBC,KAAK,EAAW,IAAI;IAAI;IACxBC,UAAU,EAAM,IAAI;IAAI;IACxBC,IAAI,EAAY,IAAI;IAAI;IACxBC,KAAK,EAAW,IAAI;IAAK;IACzBC,MAAM,EAAU,+BAA+B,CAAK;EACpD,CAAC;;EAEL,oBACIX,OAAA;IAAKY,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eAC/Bb,OAAA;MAAIY,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;;EAGV;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,EAAA,GAhCKjB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}